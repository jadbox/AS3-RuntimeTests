package tests {		import flash.geom.Point;	import com.gskinner.performance.TestSuite;	import com.gskinner.performance.MethodTest;		public class Casting extends TestSuite {			// Constants:			// Public Properties:		public var loops:uint = 1000000;			// Protected Properties:		protected var points:Array;			// Initialization:		public function Casting() {			name = "Casting";			description = "Comparing different methods of casting a value from an array. "+loops+" loops.";			tareTest = new MethodTest(tare);			initFunction = init;			iterations = 4;			tests = [				new MethodTest(none, null, "none", 0, 1, "implicit"),				new MethodTest(constructorCasting, null, "constructorCasting", 0, 1, "constructor-style"),				new MethodTest(asCasting, null, "asCasting", 0, 1, "'as' operator")			];		}			// Public getter / setters:			// Public Methods:			// Protected Methods:		protected function init():void {			points = [];			for (var i:uint=0; i<loops; i++) {				points[i] = new Point(i,i/3);			}		}			// tare method that will be run to calculate the base time required to run the loop		// so it can be subtracted from the other test results.		protected function tare():void {			for (var i:uint=0; i<loops; i++) {							}		}				protected function none():void {			for (var i:uint=0; i<loops; i++) {				var pt:Point = points[i];				var x:Number = pt.x+1;				var y:Number = pt.y+1;			}		}				protected function constructorCasting():void {			for (var i:uint=0; i<loops; i++) {				var pt:Point = Point(points[uint(i)]);				var x:Number = pt.x+1;				var y:Number = pt.y+1;			}		}				protected function asCasting():void {			for (var i:uint=0; i<loops; i++) {				var pt:Point = points[i as uint] as Point;				var x:Number = pt.x+1;				var y:Number = pt.y+1;			}		}				}	}