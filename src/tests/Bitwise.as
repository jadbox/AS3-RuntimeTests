package tests {		import com.gskinner.performance.TestSuite;	import com.gskinner.performance.MethodTest;		public class Bitwise extends TestSuite {			// Constants:			// Public Properties:		public var loops:uint = 100000;			// Protected Properties:			// Initialization:		public function Bitwise() {			name = "Bitwise";			description = "Comparing floor & round to bitwise equivalents. "+loops+" loops.";			tareTest = new MethodTest(tare);			iterations = 4;			tests = [				new MethodTest(math, null, "math", 0, 1, "Math.round(n), Math.floor(n), Math.floor(n/2)"),				new MethodTest(bitwise, null, "bitwise", 0, 1, "n+0.5|0, n|0, n>>1")			];		}			// Public getter / setters:			// Public Methods:			// Protected Methods:		// tare method that will be run to calculate the base time required to run the loop		// so it can be subtracted from the other test results.		public function tare():void {			for (var i:uint=0; i<loops; i++) {			}		}				public function math():void {			var foo:Array = [];			for (var i:uint=0; i<loops; i++) {				var a:uint = Math.floor(i/7);				var b:uint = Math.round(i/3);				var c:uint = Math.floor(i/2);				foo[i] = String(Math.random());			}		}				public function bitwise():void {			for (var i:uint=0; i<loops; i++) {				var a:uint = i/7|0;				var b:uint = i/3+0.5|0;				var c:uint = i>>1;			}		}				}	}