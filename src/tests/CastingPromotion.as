package tests {		import flash.geom.Point;	import com.gskinner.performance.TestSuite;	import com.gskinner.performance.MethodTest;		public class CastingPromotion extends TestSuite {			// Constants:			// Public Properties:		public var loops:uint = 1000000;			// Protected Properties:			// Initialization:		public function CastingPromotion() {			name = "CastingPromotion";			description = "Evaluating impact of casting an array iterator. "+loops+" loops.";			tareTest = new MethodTest(tare);			iterations = 4;			tests = [				new MethodTest(none, null, "none", 0, 1, "i*2"),				new MethodTest(constructorCasting, null, "constructorCasting", 0, 1, "uint(i*2)"),				new MethodTest(asCasting, null, "asCasting", 0, 1, "i*2 as uint")			];		}			// Public getter / setters:			// Public Methods:			// Protected Methods:		// tare method that will be run to calculate the base time required to run the loop		// so it can be subtracted from the other test results.		protected function tare():void {			var values:Array = [];			for (var i:uint=0; i<loops; i++) {							}		}				protected function none():void {			var values:Array = [];			for (var i:uint=0; i<loops; i++) {				values[i*2] = i;			}		}				protected function constructorCasting():void {			var values:Array = [];			for (var i:uint=0; i<loops; i++) {				values[uint(i*2)] = i;			}		}				protected function asCasting():void {			var values:Array = [];			for (var i:uint=0; i<loops; i++) {				values[i*2 as uint] = i;			}		}				}	}