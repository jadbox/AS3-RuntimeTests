package tests {		import flash.events.Event;	import com.gskinner.performance.TestSuite;	import com.gskinner.performance.MethodTest;		public class Events extends TestSuite {			// Constants:			// Public Properties:		public var loops:uint = 100000;			// Protected Properties:		// set up some variables used in the test:		protected var onChange:Function;			// Initialization:		public function Events() {			name = "Events";			description = "Compares the performance of events and callbacks. "+loops+" loops.";			tareTest = new MethodTest(tare);			initFunction = init;			iterations = 4;			tests = [				new MethodTest(event, null, "event", 0, 1, "dispatch event"),				new MethodTest(callback, null, "callback", 0, 1, "callback")			];		}			// Public getter / setters:			// Public Methods:			// Protected Methods:		protected function init():void {			addEventListener("change",handleChange);			onChange = changeCallback;		}			// tare method that will be run to calculate the base time required to run the loop		// so it can be subtracted from the other test results.		protected function tare():void {			for (var i:uint=0; i<loops; i++) {			}		}				protected function event():void {			for (var i:uint=0; i<loops; i++) {				dispatchEvent(new Event("change"));			}		}				protected function callback():void {			for (var i:uint=0; i<loops; i++) {				onChange();			}		}			protected function handleChange(evt:Event):void {			//nothing		}				protected function changeCallback():void {			//nothing		}					}	}