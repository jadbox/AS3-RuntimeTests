package tests {		import com.gskinner.performance.TestSuite;	import com.gskinner.performance.MethodTest;		public class VectorPopulation extends TestSuite {			// Constants:			// Public Properties:		public var loops:uint = 1000000;			// Protected Properties:			// Initialization:		public function VectorPopulation() {			name = "VectorPopulation";			description = "Comparing different methods of populating a Vector. "+loops+" loops.";			tareTest = new MethodTest(tare);			iterations = 4;			tests = [				new MethodTest(push, null, "push", 0, 1, "vec.push(i)"),				new MethodTest(length, null, "length", 0, 1, "vec[vec.length]=i"),				new MethodTest(iterator, null, "iterator", 0, 1, "vec[i]=i")			];		}			// Public getter / setters:			// Public Methods:			// Protected Methods:		// tare method that will be run to calculate the base time required to run the loop		// so it can be subtracted from the other test results.		protected function tare():void {			var vec:Vector.<uint> = new Vector.<uint>(loops);			for (var i:uint=0; i<loops; i++) {			}		}				protected function push():void {			var vec:Vector.<uint> = new Vector.<uint>();			for (var i:uint=0; i<loops; i++) {				vec.push(i);			}		}				protected function length():void {			var vec:Vector.<uint> = new Vector.<uint>();			for (var i:uint=0; i<loops; i++) {				vec[vec.length] = i;			}		}				protected function iterator():void {			var vec:Vector.<uint> = new Vector.<uint>(loops);			for (var i:uint=0; i<loops; i++) {				vec[i] = i;			}		}				}	}