package tests {		import com.gskinner.performance.TestSuite;	import com.gskinner.performance.MethodTest;		public class VectorIterators extends TestSuite {			// Constants:			// Public Properties:		// sets the length of the vector to be used in all tests:		public var loops:uint = 10000000;			// Protected Properties:		// the vector to be used in all tests (so the construction cost isn't included in the test time):		var vec:Vector.<Boolean> = new Vector.<Boolean>(loops);			// Initialization:		public function VectorIterators() {			name = "VectorIterators";			description = "Comparison of different numeric types as vector iterators. "+loops+" loops.";			iterations = 4;			tests = [				new MethodTest(uintTest, null, "uintTest", 0, 1, "uint"),				new MethodTest(intTest, null, "intTest", 0, 1, "int"),				new MethodTest(numberTest, null, "numberTest", 0, 1, "Number")			];		}			// Public getter / setters:			// Public Methods:		public function uintTest():void {			for (var i:uint=0; i<loops; i++) {				var a:Boolean = vec[i];			}		}				public function intTest():void {			for (var i:int=0; i<loops; i++) {				var a:Boolean = vec[i];			}		}				public function numberTest():void {			for (var i:Number=0; i<loops; i++) {				var a:Boolean = vec[i];			}		}			// Protected Methods:			}	}