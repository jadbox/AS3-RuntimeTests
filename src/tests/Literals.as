package tests {		import flash.geom.Point;	import com.gskinner.performance.TestSuite;	import com.gskinner.performance.MethodTest;		public class Literals extends TestSuite {			// Constants:			// Public Properties:		// the number of elements in each collection:		public var loops:uint = 10000000;						// Protected Properties:		// set up some variables used in the test:			// Initialization:		public function Literals() {			name = "Literals";			description = "Demonstration of performance impact of function calls in loops. "+loops+" loops.";			tareTest = new MethodTest(tare);			iterations = 4;			tests = [				new MethodTest(variable, null, "variable", 0, 1, "variable"),				new MethodTest(collapsed, null, "collapsed", 0, 1, "collapsed literal"),				new MethodTest(uncollapsed, null, "uncollapsed", 0, 1, "uncollapsed literal")			];		}			// Public getter / setters:			// Public Methods:			// Protected Methods:		// tare method that will be run to calculate the base time required to run the loop		// so it can be subtracted from the other test results.		public function tare():void {			for (var i:uint=0; i<loops; i++) {							}		}				public function variable():void {			var b:Number = 216.821739;			for (var i:uint=0; i<loops; i++) {				var a:Number = i-b;			}		}				public function collapsed():void {			for (var i:uint=0; i<loops; i++) {				var a:Number = i-216.821739;			}		}				public function uncollapsed():void {			for (var i:uint=0; i<loops; i++) {				var a:Number = i+(1000/23+24.5-17.8*16)+(1000/23+24.5-17.8*16)-(1000/23+24.5-17.8*16);			}		}				}	}